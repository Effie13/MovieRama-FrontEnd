body {
    background-color: var(--background-color);
}

main {
    padding-top: var(--headerHeight, 90px);
}

p, h2, h3, h4, div {
    color: var(--text-color);
}

main {
    position: relative;
}

.wrapper {
    max-width: var(--wrapperWidth);
    width: calc(100% - (2 * var(--padding)));

    main & {
        z-index: 1;
    }
}

@keyframes move1 {
    0% {
        transform: rotate3d(0) translate3d(0, 0, 0);
    }

    90% {
        transform: rotate(180deg) translate3d(30%, 610%, 0);
    }

    100% {
        transform: rotate(180deg) translate3d(30%, 610%, 0);
    }
}

@keyframes move2 {
    0% {
        transform: rotate3d(0) translate3d(0, 0, 0);
        opacity: 0.3;
    }

    15% {
        transform: rotate(280deg) translate3d(5%, -0.2%, 0);
        opacity: 0.5;
    }

    25% {
        transform: rotate(80deg) translate3d(-20%, 0.3%, 0);
        opacity: 0.5;
    }

    65% {
        transform: rotate(280deg) translate3d(-15%, -0.2%, 0);
        opacity: 0.5;
    }

    100% {
        transform: rotate(80deg) translate3d(-10%, 0.8%, 0);
        opacity: 0.5;
    }
}

.fixed-gradient {
    position: fixed;
    width: 100%;
    top: 0;
    left: 0;
    z-index: -1;
    height: var(--screenHeight);

    span {
        position: absolute;
        border-radius: 50%;
        filter: blur(90px);
        opacity: 0.5;

        &:nth-child(1) {
            width: 40vw;
            height: 25vh;
            bottom: 30vh;
            left: 20%;
            background-color: var(--accent-color);
            animation: move1 8s ease-in-out infinite alternate-reverse;
        }

        &:nth-child(2) {
            width: 60vw;
            height: 40vw;
            bottom: 0;
            left: 45%;
            background-color: aqua;
            animation: move2 20s cubic-bezier(0.39, 0.575, 0.565, 1) infinite alternate-reverse;
        }

        &:nth-child(3) {
            width: 25vw;
            height: 40vh;
            bottom: 40vh;
            left: 70%;
            background-color: blueviolet;
            animation: move1 8s ease-in-out infinite alternate-reverse;
        }
    }
}

/* Typography */

h2 {
    font-size: calc(var(--fs) + 18px);
    margin-bottom: calc(2 * var(--padding));
}

h4 {
    font-size: calc(var(--fs) + 14px);
    margin-bottom: var(--padding);
}

h5 {
    font-size: calc(var(--fs) + 4px);
}

// Decorative Image

.decor-img {
    position: fixed;
    width: 50vw;
    top: 0;
    left: -10vw;
    mask: url(./../assets/blur-mask.png); 

    @media screen and (orientation: portrait) {
        bottom: 0;
        top: auto;
    }
}

img.lazy-load {
    opacity: 0;
    transition: all 0.5s ease-out;

    &.ready {
        opacity: 1;
    }
}

* {
    scrollbar-color: rgba(0,0,0,0.6) rgba(0,0,0,0.15);
    scrollbar-width: thin;

    &::-webkit-scrollbar {
        width: 10px;
    }

    &::-webkit-scrollbar-thumb {
        background-color: rgba(0,0,0, 0.6);
        border-radius: 5px;
    }

    &::-webkit-scrollbar-track {
        background: rgba(0,0,0,0.15);
    }
}

*:focus {
    outline: 2px dashed white;
    outline-offset: 1px;
}

.js-adjust-font {
    position: fixed;
    position: fixed;
    right: calc(2 * var(--padding));
    top: calc(var(--headerHeight) + 2 * var(--padding));

    > * {
        background: transparent;
        width: 22px;
        height: 22px;
    }

    button {
        position: relative;

        &.disabled {
            opacity: 0.6;
            pointer-events: none;
        }

        &:before, 
        &:after{
            position: absolute;
            background-color: white;
            transition: all 0.3s ease;
        }

        &:before {
            content: '';
            left: 0;
            top: 10px;
            height: 2px;
            width: 100%;
        }

        &:hover {
            &:before, 
            &:after{
                background-color: var(--accent-color);
            }
        }
    }

    div {
        font-size: calc(var(--fs) + 2px);
        margin: calc( 2 * var(--padding)) 0;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    &-increase {
        &:after {
            content: '';
            width: 2px;
            height: 100%;
            top: 0;
            left: 10px;
        }
    }
}